#include "world_definitions.hpp"

#define len(X) (sizeof(X)/sizeof(X[0]))

vla<world> make_worlds(gef_context *gc) {
    auto world_vla = vla<world>();
    const char* noice_levels[] = {
        "first level\n"
        "#####\n"
        "## t#\n"
        "# b #\n"
        "#   #\n"
        "##p##\n"
        "#####\n",

        "second level\n"
        "######\n"
        "#t t##\n"
        "##   #\n"
        "##b  #\n"
        "## b #\n"
        "##   #\n"
        "###p##\n"
        "######\n",

        "one step forward, 2 steps back\n"
        "########\n"
        "# tb   #\n"
        "#p #   #\n"
        "# bt   #\n"
        "########\n",

        "sticky\n"
        "########\n"
        "#     p#\n"
        "#   bb #\n"
        "#  #####\n"
        "#     t#\n"
        "#     t#\n"
        "########\n",

        "sticky 2\n"
        "##########\n"
        "#        #\n" // clever its another trap
        "# t      #\n"
        "# #### # #\n"
        "#      # #\n"
        "# bp # # #\n"
        "#    #   #\n"
        "##########\n",

        "sticky 3\n" // basically if its on the wall respect it
        "######\n"
        "#    #\n"
        "# pbt#\n"
        "#    #\n"
        "#    #\n"
        "#    #\n"
        "#    #\n"
        "#   b#\n"
        "# t  #\n"
        "######\n",


    };
    world_vla.push(world(
        "noice",
        noice_levels,
        len(noice_levels),
        gc
    ));

    const char* iceworld_levels[] = {
        "ice to meet you\n"
        "#########\n"
        "######T##\n"
        "#TB/////#\n"
        "#P////B/#\n"
        "#///////#\n"
        "#///////#\n"
        "#//////##\n"
        "#########\n",
        
        "maze 1\n"
        "##############\n"
        "#########/####\n"
        "#########/T###\n"
        "##/////////###\n"
        "#//PB//////###\n"
        "###//////////#\n"
        "###//////////#\n"
        "###//#//#/#//#\n"
        "##############\n",

        "Patience\n"
        "##########\n"
        "#tb  #####\n"
        "# #////BT#\n"
        "#  //#####\n"
        "#  //#####\n"
        "# p/######\n"
        "##########\n",

        "block puzzle\n"
        "###########\n"
        "#  b     t#\n"
        "#     /  t#\n"
        "#    #b#  #\n"
        "#p        #\n"
        "###########\n",

        "cross\n"
        "#########\n"
        "####t##t#\n"
        "#  #/## #\n"
        "#  /B/t #\n"
        "#  #/## #\n"
        "#  #b# b#\n"
        "#   p   #\n"
        "#########\n",

        "diode\n"
        "#########\n"
        "#tb     #\n"
        "####### #\n"
        "#tb   # #\n"
        "#  #  # #\n"
        "#  /  # #\n"
        "###/### #\n"
        "#p      #\n"
        "#########\n",

        // people get really stuck on this, i wonder if its presentation
        /*
        "I\n"
        "#############\n"
        "#          t#\n"
        "#           #\n"
        "######/######\n"
        "#   ##/##   #\n"
        "# b ##/##   #\n"
        "#   //P//   #\n"
        "# # ##/##   #\n"
        "# / ##/##  t#\n"
        "##/###/######\n"
        "# b         #\n"
        "#           #\n"
        "#############\n",
*/
        "I\n"
        "#############\n"
        "######t######\n"
        "###### ######\n"
        "######/######\n"
        "######/######\n"
        "#   ##/######\n"
        "# b //P//  t#\n"
        "# # ##/######\n"
        "# / ##/######\n"
        "##/###/######\n"
        "#       #####\n"
        "#     b #####\n"
        "#       #####\n"
        "#############\n",


        "one way street\n"
        "#################\n"
        "#    # /////////#\n"
        "#      /////////#\n"
        "#    / /////////#\n"
        "#tt##/##/#//////#\n"
        "#####/#////////##\n"
        "#    /#////////##\n"
        "#  b /b////////##\n"
        "# p  /#///////###\n"
        "#    /#///#/////#\n"
        "#####/###########\n"
        "#################\n",
    };
    world_vla.push(world(
        "iceworld",
        iceworld_levels,
        len(iceworld_levels),
        gc
    ));

    const char *crate_levels[] = {
        "crate to meet you\n"
        "#########\n"
        "####t####\n"
        "#   c   #\n"
        "#    b  #\n"
        "#  p    #\n"
        "#########\n",

        "assist\n"
        "########\n"
        "#####t##\n"
        "#pb////#\n"
        "#  ////#\n"
        "#  ////#\n"
        "#    c #\n"
        "#      #\n"
        "########\n",
        
        "Overshoot\n" 
        "##########\n"
        "#        #\n"
        "# #T    t#\n"
        "# #b  c B#\n"
        "#  p     #\n"
        "##########\n",

        "tight\n"
        "##########\n"
        "##     ###\n"
        "##     #T#\n"
        "##pBC////#\n"
        "###//////#\n"
        "###/////##\n"
        "##########\n",

        "did some carbon based lifeform just say ice?\n"
        "#######\n"
        "## p ##\n"
        "# C// #\n"
        "# /// #\n"
        "#t//B #\n"
        "##   ##\n"
        "#######\n",

        "corner\n"
        "############\n"
        "#  #########\n"
        "#     c  ###\n"
        "# ##  b  ###\n"
        "# c/     ###\n"
        "### ####/###\n"
        "### ##t / ##\n"
        "### ##### ##\n"
        "###p      ##\n"
        "############\n",

            // could have more of these
        "sequence 2\n"
        "###################\n"
        "#/////////////TT/T#\n"
        "## #    ###########\n"
        "##  c  b###########\n"
        "##   bb ###########\n"
        "##p     ###########\n"
        "###################\n",

        "2 roads\n"
        "##############\n"
        "#tc      #   #\n"
        "#///////////T#\n"
        "#        #   #\n"
        "# ###### #####\n"
        "# ###### #####\n"
        "# ###### #####\n"
        "#   bb   #####\n"
        "#        #####\n"
        "#   p    #####\n"
        "#        #####\n"
        "##############\n",

        "I swear we had this before\n"
        "###############\n"
        "#      t      #\n"
        "#             #\n"
        "#######/#######\n"
        "#   ###/###   #\n"
        "# b ###/###   #\n"
        "#   ///P///   #\n"
        "#   ###/###   #\n"
        "#   ###/###  t#\n"
        "#######/#######\n"
        "# b      cccc #\n"
        "#             #\n"
        "###############\n",

    };   
    world_vla.push(world(
        "crate o'clock",
        crate_levels,
        len(crate_levels),
        gc
    ));


    const char *ring_levels[] = {
R"(line em up
##########
##T#######
##//////T#
##/b  b/##
##/  p /##
##/b  b/##
#T//////##
#######T##
##########
)",

        "ringy ding\n"
        "########\n"
        "#T/////#\n"
        "##/ bb/#\n"
        "##/   T#\n"
        "##/ b /#\n"
        "##/ p /#\n"
        "##/////#\n"
        "##T#####\n"
        "########\n",

        // this is kinda nasty, maybe the version where theres one in the corne would be easier
        "ringy dingy\n"
        "########\n"
        "##T#####\n"
        "#T/////#\n"
        "##/ bb/#\n"
        "##/   T#\n"
        "##/ b /#\n"
        "##/ p /#\n"
        "##/////#\n"
        "########\n",

R"(slippery foundation
#############
##/////////##
##/  cc   /##
#T////B/////#
##/b p    /##
##/////////##
##########T##
#############
)",
    };

    world_vla.push(world(
        "ring sting",
        ring_levels,
        len(ring_levels),
        gc
    ));

    const char *lattice_levels[] = {
        "ice diamond\n"
        "#######\n"
        "# cp  #\n"
        "# t/ c#\n"
        "# /b/ #\n"
        "#  /  #\n"
        "#     #\n"
        "#######\n",

        "promotion\n"
        "##########\n"
        "# /p/ / /#\n"
        "#/ / / / #\n"
        "# / / / /#\n"
        "#/ /b/ / #\n"
        "# / / / /#\n"
        "#/ / / / #\n"
        "# / / / /#\n"
        "#/ /t/ / #\n"
        "##########\n",

        "encircled\n"
        "############\n"
        "#//////////#\n"
        "#/p/ / / //#\n"
        "#// / / / /#\n"
        "#/ / /c/ //#\n"
        "#// /b/ / /#\n"
        "#/ /b/ / //#\n"
        "#// / / / /#\n"
        "#/ / / / //#\n"
        "#/T / / /t/#\n"
        "#//////////#\n"
        "############\n",

        // diff grid
        "lattice rules\n"
        "#############\n"
        "#P/ // // //#\n"
        "#/ // // // #\n"
        "# // // // /#\n"
        "#//c// // //#\n"
        "#/ //b// // #\n"
        "# // // // /#\n"
        "#//t// // //#\n"
        "#/ // // // #\n"
        "#############\n",
    };
    world_vla.push(world(
        "lattice pray",
        lattice_levels,
        len(lattice_levels),
        gc
    ));


    const char *good_levels[] = {
        "icey nicey\n"
        "#############\n"
        "#  /  #  /  #\n"
        "# c/p # c/b #\n"
        "#///////////#\n"
        "# c/  # c/  #\n"
        "#  /  #  /  #\n"
        "###/#####/###\n"
        "#  /  #  /  #\n"
        "#  /  #  /c #\n"
        "#T/B////////#\n"
        "#  /  #  /  #\n"
        "#  /  #  / t#\n"
        "#############\n",

            "ratchet\n"
        "#############\n"
        "########    #\n"
        "######## c  #\n"
        "########  /##\n"
        "#///P//////##\n"
        "##/#######/##\n"
        "##/##   ##/##\n"
        "##    b   /##\n"
        "##/##   ##/##\n"
        "##/#######/##\n"
        "##//////////#\n"
        "##T##########\n"
        "#############\n",



        "3 pointer\n"
        "#########\n"
        "#       #\n"
        "#     c #\n"
        "#  ### ##\n"
        "# /////T#\n"
        "# /////##\n"
        "# //##b #\n"
        "##//  p #\n"
        "#########\n",

            "ice rings\n"
        "####################\n"
        "#P/////////       t#\n"
        "#/########/#   c   #\n"
        "#/########/#  cbc  #\n"
        "#/########/#   c   #\n"
        "#/########/####    #\n"
        "#/####//////////####\n"
        "#/####B###/####/####\n"
        "#//////////####/####\n"
        "# ####/########/####\n"
        "# ####/########/####\n"
        "# ####/########/####\n"
        "#    #/########/####\n"
        "#t    //////////####\n"
        "####################\n",
    };
    
    world_vla.push(world(
        "the good levels",
        good_levels,
        len(good_levels),
        gc
    ));

    const char *nightmare_levels[] = {
        "Flintlock\n"
        "##############\n"
        "# p     ######\n"
        "#    c  ######\n"
        "#   c   ######\n"
        "### #/###/####\n"
        "#///C///T////#\n"
        "#####/#/#/####\n"
        "#     c  /  ##\n"
        "#   c b     ##\n"
        "#           ##\n"
        "##############\n",

        "Eeek\n" 
        "################\n"
        "################\n"
        "##########///###\n"
        "##///////////#/#\n"
        "##/##//////C/#/#\n"
        "##/#/B/////////#\n"
        "##P//////////#T#\n"
        "####//C//////#/#\n"
        "####//// c /   #\n"
        "####//// c / c #\n"
        "####/######/   #\n"
        "####////////#  #\n"
        "###########/####\n"
        "################\n",

        "squeeze\n"
        "#t######\n"
        "#      #\n"
        "# #b # #\n"
        "# //c/t#\n"
        "## bp b#\n"
        "####t  #\n"
        "#### c #\n"
        "####   #\n"
        "########\n",
    };

    world_vla.push(world(
        "the nightmare zone",
        nightmare_levels,
        sizeof(nightmare_levels) / sizeof(nightmare_levels[0]),
        gc
    ));


const char *water_levels[] = {
R"(nice to sea you
#########
####t####
#### ####
#wwwwwww#
#wwwwwww#
#w     w#
#w cpc w#
#w  b  w#
#w     w#
#wwwwwww#
#########
)",
R"(special delivery
#########
#     Tww
#   b /ww
#     /ww
#  p  /ww
#     /w#
#     /ww
# c   /ww
# c   /ww
#     /##
#########
)",
R"(hole punch
##################
#  w#            #
#  b#            #
#  t ////////////#
#    ////////////#
#####wwwcwwcwwcww#
#####            #
#####p           #
##################
)",
R"(rescue mission
############
#wwwwwwwwww#
#wwwwbwwwww#
#wwwwwwwwww#
###//////###
# p//////  #
#  //////  #
#ww    c   #
#ww  ccc   #
#ww  ccc   #
#ww  t     #
############
)",
R"(sequence 3
#################
#/////////w/Tw/T#
##   cc   #######
##   cc   #######
## p bb   #######
##        #######
#################
)",

};

    world_vla.push(world(
        "water",
        water_levels,
        sizeof(water_levels) / sizeof(water_levels[0]),
        gc
    ));


    const char *multiplayer_levels[] = {
        "multiplayer 1\n"
        "###############\n"
        "#w    pbpt   w#\n"
        "###############\n"
        "#             #\n"
        "#             #\n"
        "#      p      #\n"
        "#tb    #    bt#\n"
        "###############\n",

R"(lock
###########
# #t# #w# #
#t#b#w# # #
#b# # # # #
#p#p#p#p#p#
#w# #b#b# #
# # #t#t#b#
# # # # #t#
###########
)",

R"(doublelock
#############
#  #  #  #  #
#b #  # t# t#
#t #  # b# b#
#w #  #  #  #
#w #  #  #  #
#p #p #p #pw#
#  #  #  # ##
#  # b#ww#  #
#  # t#ww#  #
#############
)",

R"(multiplayer 4
##################
#       #   ww  t#
#   cb  #        #
#w      #        #
#  ##   #  ##    #
#   # ww# b #    #
#pw # wt#p  #    #
##################
)",

R"(multiplayer 5
#################
#             #/#
#t            B/#
#             #/#
#      c       /#
#              /#
#             ###
#/////////////BT#
#  w          ###
#ppw            #
#################
)",
R"(march of thousands
########
#      #
#  t   #
#  b   #
#      #
#      #
#wwwwww#
#wwwwww#
#wwwwww#
#wwwwww#
#wwwwww#
#      #
#  #   #
# p    #
#  pp  #
# ppp  #
#      #
#      #
########
)",
R"(mirrorverse
###############
#p     #p     #
#    c #  w c #
#  b   #  b   #
#      #      #
# c  T # c  T #
#      #      #
###############
#p     #p     #
#    c #    c #
#  b   #  bw  #
#  w   #      #
# c  T # c  T #
#      #      #
###############
)",
R"(prison break
################
#tbw           #
####           #
#              #
#              #
#         wwwww#
#         cw p #
#  p       w   #
#    /     w   #
#          wwww#
################
)",
R"(pp world
################
#       wbt#####
#       ########
#   w###########
#   w#w   /   w#
#w ww#w       w#
#w            w#
#wpp          w#
################
)",

R"(reunion
########################
#                 wbt###
#w#########w############
# w       # w       ####
# w       #     /   ####
# w       #  wwwwww ####
#         ##        ####
# c   wwww#wcww     ####
#        p#        p####
########################
)",

R"(only up
##############
#         #p##
# #        bt#
# #        w##
# # ##########
# #//////////#
# ##########/#
#p///////////#
##############
)",

    };   

    world_vla.push(world(
        "multiplayer",
        multiplayer_levels,
        sizeof(multiplayer_levels) / sizeof(multiplayer_levels[0]),
        gc
    ));

    const char *other_levels[] = {
R"(water gay
#######
###T###
###/###
###/###
##//  #
##/// #
##//B #
## /B #
# /p  #
#  / ##
#  //##
# c//##
#  //##
###/###
###/###
###T###
#######
)",

R"(penis
##########
#   bt   #
# wwwwww #
#  / / ww#
#ww / /  #
# w/ / w #
# w / /w #
# w/ /   #
# w / /ww#
# www ww #
#        #
#  p     #
#        #
#   /////#
#////#   #
#  ###   #
#        #
#        #
#        #
##########
)",

R"(not mp lol
####################
#p//////////// ////#
#/ ////////// /////#
#w/ //////// //////#
# // ////// ///////#
# /// /// w////////#
#w//// // w////////#
#/////b///w////////#
#/////t///w////////#
#/////////w  //////#
#w  w/////www  ////#
####################
)",
R"(decoder
#####################
############t#t#t#t##
#p////////b///b////t#
#/ ////////b///////t#
#// ////////b//b///t#
#/// //////b////b//t#
#//////////////////##
#//////////////////##
#//////////////////##
#//////////////////##
#/ ///////// /////b##
# //////////// ////##
#// //////////// //##
#/// ///////////// ##
#####################
)",

    "railgun\n"
    "#########\n"
    "####t####\n"
    "####t####\n"
    "####t####\n"
    "#t  /   #\n"
    "# #b/ b #\n"
    "# # /   #\n"
    "# # /b  #\n"
    "#p# /   #\n"
    "####/## #\n"
    "####B   #\n"
    "####/ ###\n"
    "####/   #\n"
    "####/####\n"
    "#########\n",

    // obviously cool but also broken, its a commutativity problem

    "loom\n"
    "#############\n"
    "#  ///#///###\n"
    "#  ///////tt#\n"
    "# b//#////###\n"
    "# b///////tt#\n"
    "# b/////#/###\n"
    "#  ///////tt#\n"
    "# #///////###\n"
    "#  bbb      #\n"
    "#p          #\n"
    "#############\n",


        "long way\n"
    "###############\n"
    "#######T#######\n"
    "#      /     t#\n"
    "#  p   B      #\n"
    "#      /      #\n"
    "#######/      #\n"
    "#######/      #\n"
    "#######/      #\n"
    "#   b  /      #\n"
    "#      /      #\n"
    "#      /#######\n"
    "#      /#######\n"
    "###############\n",


    "block puzzle 3\n"
    "###########\n"
    "# b    t  #\n"
    "#    /t # #\n"
    "#   #b#b# #\n"
    "#p     t  #\n"
    "###########\n",

R"(sequence 4
############
#####T######
#####/######
#T////   ###
#####/## ###
#####/   ###
#####/######
#   #/     #
#   #/     #
#    /     #
# cbb/     #
# p  /#    #
# c  /#    #
#    /#    #
#    /#    #
#####/######
############
)",

R"(sequence 5
########################
#////////////////T/wT/T#
## #       #############
##          ############
### ccbbccb ############
###p        ############
########################
#/////////////////TTww/#
## #       #############
##          ############
### ccbcbcc ############
###p        ############
########################
)",

R"(sequence finger
########################
#########T##############
####### //##############
####### //##############
####### //##############
####### B///#/##########
#######/C/////##########
####T///C/B////T########
######///B/PB//#########
######   ////  #########
#########///  ##########
#########/CC ###########
#########/CC ###########
#########//C ###########
#########/// ###########
##########T#############
##########/#############
########################
)",

    };
    
    world_vla.push(world(
        "other levels",
        other_levels,
        len(other_levels),
        gc
    ));

    return world_vla;
}
